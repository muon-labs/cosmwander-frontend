{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/MsgCreateBalancerPool",
    "definitions": {
        "MsgCreateBalancerPool": {
            "properties": {
                "sender": {
                    "type": "string"
                },
                "pool_params": {
                    "$ref": "#/definitions/osmosis.gamm.v1beta1.PoolParams",
                    "additionalProperties": true
                },
                "pool_assets": {
                    "items": {
                        "$ref": "#/definitions/osmosis.gamm.v1beta1.PoolAsset"
                    },
                    "type": "array"
                },
                "future_pool_governor": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Msg Create Balancer Pool",
            "description": "===================== MsgCreatePool"
        },
        "cosmos.base.v1beta1.Coin": {
            "properties": {
                "denom": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Coin",
            "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "osmosis.gamm.v1beta1.PoolAsset": {
            "properties": {
                "token": {
                    "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
                    "additionalProperties": true,
                    "description": "Coins we are talking about, the denomination must be unique amongst all PoolAssets for this pool."
                },
                "weight": {
                    "type": "string",
                    "description": "Weight that is not normalized. This weight must be less than 2^50"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Pool Asset",
            "description": "Pool asset is an internal struct that combines the amount of the token in the pool, and its balancer weight. This is an awkward packaging of data, and should be revisited in a future state migration."
        },
        "osmosis.gamm.v1beta1.PoolParams": {
            "properties": {
                "swap_fee": {
                    "type": "string"
                },
                "exit_fee": {
                    "type": "string"
                },
                "smooth_weight_change_params": {
                    "$ref": "#/definitions/osmosis.gamm.v1beta1.SmoothWeightChangeParams",
                    "additionalProperties": true
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Pool Params",
            "description": "PoolParams defined the parameters that will be managed by the pool governance in the future. This params are not managed by the chain governance. Instead they will be managed by the token holders of the pool. The pool's token holders are specified in future_pool_governor."
        },
        "osmosis.gamm.v1beta1.SmoothWeightChangeParams": {
            "properties": {
                "start_time": {
                    "type": "string",
                    "description": "The start time for beginning the weight change. If a parameter change / pool instantiation leaves this blank, it should be generated by the state_machine as the current time.",
                    "format": "date-time"
                },
                "duration": {
                    "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
                    "type": "string",
                    "description": "Duration for the weights to change over",
                    "format": "regex"
                },
                "initial_pool_weights": {
                    "items": {
                        "$ref": "#/definitions/osmosis.gamm.v1beta1.PoolAsset"
                    },
                    "type": "array",
                    "description": "The initial pool weights. These are copied from the pool's settings at the time of weight change instantiation. The amount PoolAsset.token.amount field is ignored if present, future type refactorings should just have a type with the denom \u0026 weight here."
                },
                "target_pool_weights": {
                    "items": {
                        "$ref": "#/definitions/osmosis.gamm.v1beta1.PoolAsset"
                    },
                    "type": "array",
                    "description": "The target pool weights. The pool weights will change linearly with respect to time between start_time, and start_time + duration. The amount PoolAsset.token.amount field is ignored if present, future type refactorings should just have a type with the denom \u0026 weight here.  Intermediate variable for the 'slope' of pool weights. This is equal to (target_pool_weights - initial_pool_weights) / (duration) TODO: Work out precision, and decide if this is good to add repeated PoolAsset poolWeightSlope = 5 [  (gogoproto.moretags) = \"yaml:\\\"pool_weight_slope\\\"\",  (gogoproto.nullable) = false ];"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Smooth Weight Change Params",
            "description": "Parameters for changing the weights in a balancer pool smoothly from a start weight and end weight over a period of time. Currently, the only smooth change supported is linear changing between the two weights, but more types may be added in the future. When these parameters are set, the weight w(t) for pool time `t` is the following:   t \u003c= start_time: w(t) = initial_pool_weights   start_time \u003c t \u003c= start_time + duration:     w(t) = initial_pool_weights + (t - start_time) *       (target_pool_weights - initial_pool_weights) / (duration)   t \u003e start_time + duration: w(t) = target_pool_weights"
        }
    }
}